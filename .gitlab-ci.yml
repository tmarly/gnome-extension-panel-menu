variables:
  PACKAGE: panel-menu
  PACKAGE_DESC: Panel Menu
  PACKAGE_UUID: ${PACKAGE}@astrapi.os
  PACKAGE_NAME: ${PACKAGE}.zip
  PACKAGE_REGISTRY_URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PACKAGE}

stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy

extension:       # This job runs in the build stage, which runs first.
  stage: build
  image: debian:stable-slim
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - apt update
    - apt install --no-install-recommends -y zip libglib2.0-bin
  script:
    - echo "Compiling the code..."
    - cd src
    - zip -r ../${PACKAGE_NAME} *
    - cd ..
    - echo "Compile complete."
  artifacts:
    name: $CI_COMMIT_REF_NAME
    expose_as: Extension
    paths:
      - ${PACKAGE_NAME}
    expire_in: 1 day


package:      # This job runs in the deploy stage.
  stage: deploy
  needs:
    - job: extension
      artifacts: true
  environment: production
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG

  script:
    - echo "Deploying application..."
    - |
      curl \
        --header "JOB-TOKEN: $CI_JOB_TOKEN" \
        --upload-file ${PACKAGE_NAME} \
        "${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}/${PACKAGE_NAME}"
    - echo "Application successfully deployed."

release:
  stage: deploy
  needs:
    - job: package
      artifacts: true
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Creating release for version $CI_COMMIT_TAG"
  release:
    name: Version $CI_COMMIT_TAG
    tag_name: $CI_COMMIT_TAG
    description: "${CI_COMMIT_TAG_MESSAGE:-No release notes.}"
    assets:
      links:
        - name: ${PACKAGE_DESC} v${CI_COMMIT_TAG}
          url: ${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}/${PACKAGE_NAME}
          filepath: /${PACKAGE_NAME}
          link_type: package
